//
//  HomeInteractor.swift
//  DesafioMarvel
//
//  Created by Gustavo Melki Leal on 17/05/2018.
//  Copyright (c) 2018 gustavoMelki. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RxSwift

protocol HomeBusinessLogic {
  func getCharacters(request: Home.Request)
}

protocol HomeDataStore {
  //var name: String { get set }
}

class HomeInteractor: HomeBusinessLogic, HomeDataStore {
  var presenter: HomePresentationLogic?
  var worker: HomeWorker?
  let disposeBag = DisposeBag()
  //var name: String = ""

  // MARK: Do something
  
  func getCharacters(request: Home.Request) {
    worker = HomeWorker()
    worker?.doSomeWork()
    
    MarvelManager.getCharactersList().subscribe(onNext: { (result) in
      
      if let result =  result.data?.results {
        let response = Home.Response(characters: result)
        self.presenter?.presentCharacters(response: response)
      }
      
    }, onError: { (error) in
      print(error)
    }, onCompleted: {
      print("onCompleted")
    }).disposed(by: disposeBag)
 
  }
}
